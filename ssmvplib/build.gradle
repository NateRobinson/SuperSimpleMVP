apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
	compileSdkVersion rootProject.ext.android["compileSdkVersion"]
	buildToolsVersion rootProject.ext.android["buildToolsVersion"]
	useLibrary 'org.apache.http.legacy'

	compileOptions {
		targetCompatibility JavaVersion.VERSION_1_8
		sourceCompatibility JavaVersion.VERSION_1_8
	}

	defaultConfig {
		minSdkVersion rootProject.ext.android["minSdkVersion"]
		targetSdkVersion rootProject.ext.android["targetSdkVersion"]
		versionCode rootProject.ext.android["versionCode"]
		versionName rootProject.ext.android["versionName"]
	}

	buildTypes {
		release {
			minifyEnabled false
			proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
		}
	}
}

dependencies {
	//support lib
	api(rootProject.ext.dependencies["appcompat-v7"]) {
		exclude module: 'support-annotations'
	}
	api rootProject.ext.dependencies["design"]
	api(rootProject.ext.dependencies["recyclerview-v7"]) {
		exclude module: 'support-annotations'
	}
	//rx lib
	api rootProject.ext.dependencies["rxjava2"]
	api(rootProject.ext.dependencies["rxandroid2"]) {
		exclude module: 'rxjava'
	}
	api(rootProject.ext.dependencies["rxcache2"]) {
		exclude module: 'rxjava'
		exclude module: 'dagger'
		exclude module: 'api'
	}
	implementation(rootProject.ext.dependencies["rxcache-jolyglot-gson"]) {
		exclude module: 'gson'
	}
	api(rootProject.ext.dependencies["rxlifecycle3"]) {
		exclude module: 'rxjava'
		exclude module: 'jsr305'
	}
	api(rootProject.ext.dependencies["rxlifecycle3-android"]) {
		exclude module: 'support-annotations'
		exclude module: 'rxjava'
		exclude module: 'rxandroid'
		exclude module: 'rxlifecycle'
	}
	api(rootProject.ext.dependencies["rxpermissions2"]) {
		exclude module: 'rxjava'
		exclude module: 'support-annotations'
	}
	api rootProject.ext.dependencies['rxerrorhandler2']
	//network lib
	api(rootProject.ext.dependencies["retrofit"]) {
		exclude module: 'okhttp'
		exclude module: 'okio'
	}
	implementation(rootProject.ext.dependencies["retrofit-converter-gson"]) {
		exclude module: 'gson'
		exclude module: 'okhttp'
		exclude module: 'okio'
		exclude module: 'retrofit'
	}
	implementation(rootProject.ext.dependencies["retrofit-adapter-rxjava2"]) {
		exclude module: 'rxjava'
		exclude module: 'okhttp'
		exclude module: 'retrofit'
		exclude module: 'okio'
	}
	api rootProject.ext.dependencies["okhttp3"]
	api rootProject.ext.dependencies["glide"]
	//tools
	api rootProject.ext.dependencies["autosize"]
	api rootProject.ext.dependencies["dagger2"]
	api rootProject.ext.dependencies["gson"]
	api(rootProject.ext.dependencies["arouter"]) {
		exclude module: 'support-v4'
		exclude module: 'support-annotations'
	}
	api rootProject.ext.dependencies["utilcode"]
	//test
	api rootProject.ext.dependencies["timber"]
	annotationProcessor rootProject.ext.dependencies["dagger2-compiler"]
	annotationProcessor(rootProject.ext.dependencies["glide-compiler"]) {
		exclude module: 'jsr305'
	}
	kapt rootProject.ext.dependencies["dagger2-compiler"]
	kapt(rootProject.ext.dependencies["glide-compiler"]) {
		exclude module: 'jsr305'
	}
}
